// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GitBetter.Migrations
{
    [DbContext(typeof(GitBetterDbContext))]
    [Migration("20240518202336_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GitBetter.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsScheduled")
                        .HasColumnType("boolean");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PatientId")
                        .HasColumnType("integer");

                    b.Property<int>("ProviderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("PatientId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 1,
                            IsScheduled = true,
                            Notes = "",
                            PatientId = 1,
                            ProviderId = 2
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 7, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 2,
                            IsScheduled = true,
                            Notes = "",
                            PatientId = 2,
                            ProviderId = 1
                        });
                });

            modelBuilder.Entity("GitBetter.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Facilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "",
                            Description = "",
                            Name = "PTDoneRight"
                        },
                        new
                        {
                            Id = 2,
                            Address = "",
                            Description = "",
                            Name = "WalkAnew"
                        });
                });

            modelBuilder.Entity("GitBetter.Models.FacilitySpecialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<int>("SpecializationId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("FacilitySpecializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacilityId = 1,
                            SpecializationId = 2
                        },
                        new
                        {
                            Id = 2,
                            FacilityId = 2,
                            SpecializationId = 2
                        });
                });

            modelBuilder.Entity("GitBetter.Models.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "A specialization related to all Women's Health issues",
                            Title = "Women's Health"
                        },
                        new
                        {
                            Id = 2,
                            Description = "A specialization related to all Orthopedic issues",
                            Title = "Orthopedic "
                        });
                });

            modelBuilder.Entity("GitBetter.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsProvider")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Uid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Hi I'm James!",
                            Email = "JM@gmail.com",
                            FacilityId = 1,
                            IsFavorite = false,
                            IsProvider = false,
                            Name = "James",
                            Uid = 1
                        },
                        new
                        {
                            Id = 2,
                            Bio = "",
                            Email = "JHH@gmail.com",
                            FacilityId = 2,
                            IsFavorite = false,
                            IsProvider = true,
                            Name = "John",
                            Uid = 2
                        });
                });

            modelBuilder.Entity("GitBetter.Models.Appointment", b =>
                {
                    b.HasOne("GitBetter.Models.Facility", "Facility")
                        .WithMany("Appointments")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GitBetter.Models.User", "Patient")
                        .WithMany("PatientAppointments")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GitBetter.Models.User", "Provider")
                        .WithMany("ProviderAppointments")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Patient");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("GitBetter.Models.FacilitySpecialization", b =>
                {
                    b.HasOne("GitBetter.Models.Facility", "Facility")
                        .WithMany("FacilitySpecializations")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GitBetter.Models.Specialization", "Specialization")
                        .WithMany("FacilitySpecializations")
                        .HasForeignKey("SpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("GitBetter.Models.User", b =>
                {
                    b.HasOne("GitBetter.Models.Facility", "Facility")
                        .WithMany("Users")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");
                });

            modelBuilder.Entity("GitBetter.Models.Facility", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("FacilitySpecializations");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("GitBetter.Models.Specialization", b =>
                {
                    b.Navigation("FacilitySpecializations");
                });

            modelBuilder.Entity("GitBetter.Models.User", b =>
                {
                    b.Navigation("PatientAppointments");

                    b.Navigation("ProviderAppointments");
                });
#pragma warning restore 612, 618
        }
    }
}
